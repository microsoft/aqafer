name: Run AQAvit Paralleltest

on:
  workflow_dispatch: # Allows the job to be manually triggered
    inputs:
      customizedSdkUrl:
        description: SDK URL
        required: true
        default: ''
      aqatest-repo:
        description: adoptium/aqa-tests repository
        required: true
        type: string
        default: 'adoptium/aqa-tests:v1.0.0-release'
      testImage:
        description: Native Libs URL
        required: true
        default: ''
      version:
        description: JDK version
        required: false
        type: choice
        options:
          - '11'
          - '17'
          - '21'
      pool:
        description: Agent Pool
        required: true
        type: string
        default: None
      testLists:
        description: Number of testLists to generate
        required: false
        default: '4'

# Dynamically set the name of the test-run
run-name: Test JDK${{ inputs.version }}u on ${{ inputs.pool }}

env:  # Links to the JDK build under test and the native test libs
  USE_TESTENV_PROPERTIES: true


permissions:
  id-token: write
  contents: read

jobs:
  configuration:
    environment: paralleltest
    runs-on: ubuntu-latest
    outputs:
      agent-config: ${{ steps.setup.outputs.config }}
      testLists: ${{ steps.setup.outputs.testConfig }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup
        id: setup
        run: |
          python ./scripts/vendors/microsoft/configure.py --pool ${{ inputs.pool }} --testLists ${{ inputs.testLists }}

  setup-parallel:
    name: Generate ${{ matrix.suite }} parallelList
    runs-on: ${{ fromJSON(needs.configuration.outputs.agent-config) }}
    needs: configuration
    strategy:
      fail-fast: true
      matrix:
        suite: [functional, openjdk, system, perf]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Clean up workspace
        if: ${{ runner.os == 'macOS' }}
        uses: ./.github/vendor-templates/microsoft/clean_workspace

      - name: Download artifacts
        uses: ./.github/vendor-templates/microsoft/az_download_artifacts
        with:
          blobs: '${{ inputs.customizedSdkUrl }},${{ inputs.testImage }}'
          destination_path: ${{ github.workspace }}/artifacts
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID_TEST }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID_TEST }}
          AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID_TEST }}
          AZURE_STORAGE_ACCOUNT: ${{ secrets.AZURE_STORAGE_ACCOUNT_TEST }}
          AZURE_STORAGE_CONTAINER: ${{ secrets.AZURE_STORAGE_CONTAINER_TEST }}

      - name: Setup test environment
        run: |
          python ./scripts/vendors/microsoft/setup_environment.py --source ${{ github.workspace }}/artifacts --destination ${{ github.workspace }}/jdk

      - name: Generate parallelList - ${{ matrix.suite }}
        uses: adoptium/run-aqa@v2.0.1
        with:
          jdksource: 'customized'
          aqa-testsRepo: ${{ inputs.aqatest-repo }}
          build_list: ${{ matrix.suite }}
          target: ${{ matrix.suite }} # parallellist to generate
          run_parallel: true
          num_machines: ${{ inputs.testLists }}

      - name: Archive parallelList - ${{ matrix.suite }}
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.suite }}-parallelList.mk
          path: ${{ github.workspace }}/aqa-tests/TKG/parallelList.mk

  run-aqa-parallel:
    name: ${{ matrix.suite }} ${{ matrix.test_list }}
    runs-on: ${{ fromJSON(needs.configuration.outputs.agent-config) }}
    needs: [setup-parallel, configuration]
    timeout-minutes: 1440
    strategy:
      fail-fast: false
      matrix:
        test_list: ${{ fromJSON(needs.configuration.outputs.testLists) }}
        suite: [functional, openjdk, system, perf]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Clean up workspace
        if: ${{ runner.os == 'macOS' }}
        uses: ./.github/vendor-templates/microsoft/clean_workspace

      - name: Download artifacts
        uses: ./.github/vendor-templates/microsoft/az_download_artifacts
        with:
          blobs: '${{ inputs.customizedSdkUrl }},${{ inputs.testImage }}'
          destination_path: ${{ github.workspace }}/artifacts
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID_TEST }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID_TEST }}
          AZURE_SUBSCRIPTION: ${{ secrets.AZURE_SUBSCRIPTION_ID_TEST }}
          AZURE_STORAGE_ACCOUNT: ${{ secrets.AZURE_STORAGE_ACCOUNT_TEST }}
          AZURE_STORAGE_CONTAINER: ${{ secrets.AZURE_STORAGE_CONTAINER_TEST }}

      - name: Download parallelList - ${{ matrix.suite }}
        uses: actions/download-artifact@v2
        with:
          name: ${{ matrix.suite }}-parallelList.mk
          path: ./

      - name: Setup test environment
        run: |
          python ./scripts/vendors/microsoft/setup_environment.py --source ${{ github.workspace }}/artifacts --destination ${{ github.workspace }}/jdk

      - name: Configure linux
        if: ${{ runner.os == 'linux' }}
        uses: ./.github/vendor-templates/microsoft/configure_linux

      - name: Run ${{ matrix.suite }} ${{ matrix.test_list }} tests
        uses: adoptium/run-aqa@v2.0.1
        with:
          jdksource: 'customized'
          aqa-testsRepo: ${{ inputs.aqatest-repo }}
          build_list: ${{ matrix.suite }}
          target : -f parallelList.mk ${{ matrix.test_list }}
          version: ${{ inputs.version }}

      - uses: actions/upload-artifact@v2
        if: always() # Always run this step (even if the tests failed)
        with:
          name: test_output_${{ matrix.suite }}_${{ matrix.test_list }}
          path: ./**/output_*/*.tap
