name: Run AQAvit Paralleltest docker

on:
  workflow_dispatch: # Allows the job to be manually triggered
    inputs:
      customizedSdkUrl:
         description: SDK URL
         required: true
      testImage:
        description: Native Libs URL
        required: true
      aqatest-repo:
        description: adoptium/aqa-tests repository
        required: true
        type: string
        default: 'adoptium/aqa-tests:v0.9.9-release'
      containerRegistry:
        description: Container registry
        required: true
      testLists:
        description: Number of testLists to generate
        required: false
        default: '4'
      pool:
          description: Agent pool
          required: true
          type: string
          default: None

jobs:
  configuration:
    runs-on: ubuntu-latest
    outputs:
      testLists: ${{ steps.configuration.outputs.testConfig }}
    steps:
      - name: Configuration
        id: configuration
        shell: python
        run: |
          import os
          import json

          num_lists = ${{ inputs.testLists }}
          test_lists = []

          # Generate the test lists
          for list in range(num_lists):
            test_lists.append(f"testList_{list}")

          with open(os.environ['GITHUB_OUTPUT'], 'a') as fh:
            print(f"testConfig={json.dumps(test_lists)}", file=fh)

  setup-parallel-docker:
    runs-on: ${{ inputs.pool }}
    container:
      image: ${{ inputs.containerRegistry }}
      env:
        USE_TESTENV_PROPERTIES: true
      options: --cpus 2
      credentials:
        username: ${{ secrets.ACR_TOKEN_NAME }}
        password: ${{ secrets.AZURE_ACR_TOKEN_PASS1 }}
    strategy:
      fail-fast: true
      matrix:
        suite: [functional, openjdk, system, perf]
    steps:

      - name: Setup ANT_HOME
        working-directory: ${{ github.workspace }}
        shell: bash
        run: |
          curl -OLJKSks https://dlcdn.apache.org//ant/binaries/apache-ant-1.9.16-bin.tar.gz
          curl -o ant-contrib.tar.gz -LJSks https://sourceforge.net/projects/ant-contrib/files/ant-contrib/ant-contrib-1.0b2/ant-contrib-1.0b2-bin.tar.gz/download
          tar xvf ant-contrib.tar.gz
          tar xvf apache-ant-1.9.16-bin.tar.gz
          mv ant-contrib/lib/ant-contrib.jar apache-ant-1.9.16/lib/
          echo "ANT_HOME=${{ github.workspace }}/apache-ant-1.9.16" >> $GITHUB_ENV

      - name: update PATH
        run: |
          echo "$ANT_HOME/bin" >> $GITHUB_PATH

      - name: Setup TEST_JDK_HOME
        working-directory: ${{ github.workspace }}
        shell: bash
        run: |
          curl -s -o linux-binaries.tar.gz "${{ secrets.BASE_CONTAINER_URL }}${{ inputs.customizedSdkUrl }}?${{ secrets.SAS_TOKEN }}"
          mkdir tmp && tar -xzf linux-binaries.tar.gz -C ./tmp
          jdk_directory=$(ls ./tmp)
          echo "TEST_JDK_HOME=${{ github.workspace }}/tmp/$jdk_directory" >> $GITHUB_ENV

      - uses: adoptium/run-aqa@v2.0.1
        with:
          jdksource: 'customized'
          aqa-testsRepo: ${{ inputs.aqatest-repo }}
          build_list: ${{ matrix.suite }}
          target: ${{ matrix.suite }} # parallellist to generate
          run_parallel: true
          num_machines: ${{ inputs.testLists }}

      - name: Archive parallelList - ${{ matrix.suite }}
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.suite }}-parallelList.mk
          path: ${{ github.workspace }}/aqa-tests/TKG/parallelList.mk

  run-aqa-parallel-docker:
    runs-on: ubuntu-latest
    needs: [setup-parallel-docker, configuration]
    timeout-minutes: 1440
    container:
      image: ${{ inputs.containerRegistry }}
      env:
        USE_TESTENV_PROPERTIES: true
        DISPLAY: ':1'
      options: --cpus 2
      credentials:
        username: ${{ secrets.ACR_TOKEN_NAME }}
        password: ${{ secrets.AZURE_ACR_TOKEN_PASS1 }}
    strategy:
      fail-fast: false
      matrix:
        test_list: ${{ fromJSON(needs.configuration.outputs.testLists) }}
        suite: [functional, openjdk, system, perf]
    steps:

      - name: Download parallelList - ${{ matrix.suite }}
        uses: actions/download-artifact@v2
        with:
          name: ${{ matrix.suite }}-parallelList.mk
          path: ./

      - name: Setup ANT_HOME
        working-directory: ${{ github.workspace }}
        shell: bash
        run: |
          curl -OLJKSks https://dlcdn.apache.org//ant/binaries/apache-ant-1.9.16-bin.tar.gz
          curl -o ant-contrib.tar.gz -LJSks https://sourceforge.net/projects/ant-contrib/files/ant-contrib/ant-contrib-1.0b2/ant-contrib-1.0b2-bin.tar.gz/download
          tar xvf ant-contrib.tar.gz
          tar xvf apache-ant-1.9.16-bin.tar.gz
          mv ant-contrib/lib/ant-contrib.jar apache-ant-1.9.16/lib/
          echo "ANT_HOME=${{ github.workspace }}/apache-ant-1.9.16" >> $GITHUB_ENV
          echo "ANT_OPTS="-Xms256M -Xmx512M"" >> $GITHUB_ENV

      - name: update PATH
        run: |
          echo "$ANT_HOME/bin" >> $GITHUB_PATH

      - name: Setup TEST_JDK_HOME
        working-directory: ${{ github.workspace }}
        shell: bash
        run: |
          curl -s -o linux-binaries.tar.gz "${{ secrets.BASE_CONTAINER_URL }}${{ inputs.customizedSdkUrl }}?${{ secrets.SAS_TOKEN }}"
          mkdir tmp && tar -xzf linux-binaries.tar.gz -C ./tmp
          jdk_directory=$(ls ./tmp)
          echo "TEST_JDK_HOME=${{ github.workspace }}/tmp/$jdk_directory" >> $GITHUB_ENV

      - name: Setup TESTIMAGE_PATH
        working-directory: ${{ github.workspace }}
        shell: bash
        run: |
          curl -o jdk-native-libs.tar.gz "${{ secrets.BASE_CONTAINER_URL }}${{ inputs.testImage }}?${{ secrets.SAS_TOKEN }}"
          mkdir ./tmp-libs && tar xvf jdk-native-libs.tar.gz -C ./tmp-libs
          file_name=$(ls ./tmp-libs)
          jdk_testimage="${{ github.workspace }}/tmp-libs/$file_name"
          echo "TESTIMAGE_PATH=$jdk_testimage" >> $GITHUB_ENV

      - name: install dependencies
        run: |
          apk add freetype-dev fontconfig ttf-dejavu

      - name: Run AQA Docker Paralleltest ${{ matrix.suite }}_${{ matrix.test_list }}
        uses: adoptium/run-aqa@v2.0.1
        with:
          jdksource: 'customized'
          aqa-testsRepo: ${{ inputs.aqatest-repo }}
          build_list: ${{ matrix.suite }}
          target : -f parallelList.mk ${{ matrix.test_list }}

      - uses: actions/upload-artifact@v2
        if: always() # Always run this step (even if the tests failed)
        with:
          name: test_output_${{ matrix.suite }}_${{ matrix.test_list }}
          path: ./**/output_*/*.tap
