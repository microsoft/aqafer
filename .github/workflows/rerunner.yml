name: Run AQAvit Paralleltest

on:
  workflow_dispatch: # Allows the job to be manually triggered
    inputs:
      customizedSdkUrl:
        description: SDK URL
        required: true
        default: ''
      aqatest-repo:
        description: adoptium/aqa-tests repository
        required: true
        type: string
        default: 'adoptium/aqa-tests:v1.0.0-release'
      testImage:
        description: Native Libs URL
        required: true
        default: ''
      version:
        description: JDK version
        required: false
        type: choice
        options:
          - '11'
          - '17'
          - '21'
      suite:
        description: AQAvit Test suite
        required: true
        type: choice
        options:
          - 'functional'
          - 'openjdk'
          - 'system'
          - 'perf'
      pool:
        description: Agent Pool
        required: true
        type: string
        default: None
      aqa-targets:
        description: OpenJDK test targets (comma separated)
        required: true
        default: ''
      storage_container:
        description: Storage Container
        required: true
        type: string
        default: ''

# Dynamically set the name of the test-run
run-name: Run JDK${{ inputs.version }}u ${{ inputs.pool }} ${{ inputs.aqa-targets }}

env:  # Links to the JDK build under test and the native test libs
  USE_TESTENV_PROPERTIES: true

permissions:
  id-token: write
  contents: read

jobs:
  configuration:
    runs-on: ubuntu-latest
    outputs:
      agent-config: ${{ steps.setup.outputs.config }}
      testLists: ${{ steps.setup.outputs.testConfig }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup
        id: setup
        run: |
          python ./scripts/vendors/microsoft/configure.py --pool ${{ inputs.pool }} --testLists 0

  run-aqa-parallel:
    name: Execute ${{ inputs.suite }} ${{ inputs.aqa-targets }}
    runs-on: ${{ fromJSON(needs.configuration.outputs.agent-config) }}
    needs: [configuration]
    timeout-minutes: 1440
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Download artifacts
        uses: ./.github/vendor-templates/microsoft/az_download_artifacts
        with:
          blobs: '${{ inputs.customizedSdkUrl }},${{ inputs.testImage }}'
          destination_path: ${{ github.workspace }}/artifacts
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          AZURE_STORAGE_ACCOUNT: ${{ secrets.AZURE_STORAGE_ACCOUNT }}
          AZURE_STORAGE_CONTAINER: ${{ inputs.storage_container }}

      - name: Setup test environment
        run: |
          python ./scripts/vendors/microsoft/setup_environment.py --source ${{ github.workspace }}/artifacts --destination ${{ github.workspace }}/jdk

      - name: Configure linux
        if: ${{ runner.os == 'linux' }}
        uses: ./.github/vendor-templates/microsoft/configure_linux

      - name: Run ${{ inputs.suite }} ${{ inputs.aqa-targets }}
        uses: adoptium/run-aqa@v2.0.1
        with:
          jdksource: 'customized'
          aqa-testsRepo: ${{ inputs.aqatest-repo }}
          build_list: ${{ inputs.suite }}
          target : _testList TESTLIST=${{ inputs.aqa-targets }}
          version: ${{ inputs.version }}

      - uses: actions/upload-artifact@v2
        if: always() # Always run this step (even if the tests failed)
        with:
          name: test_output_${{ inputs.suite }}
          path: ./**/output_*/*.tap
